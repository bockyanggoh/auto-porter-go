version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  test:
    docker:
      - image: 'circleci/golang:latest'
      - image: circleci/mysql:latest
        command: [--default-authentication-plugin=mysql_native_password]
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: porter_db
          MYSQL_USER: app_user_test
          MYSQL_PASSWORD: passw0rd
    steps:
      - checkout
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI, Setup Tables
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u app_user_test -ppassw0rd porter_db < sql/create_script.sql
      - run:
          name: Reality Tests
          command: |
            mv ci.env test.env
            go test ./... -coverprofile=coverage.out -covermode=atomic
      - run:
          name: Upload Test Coverage Report
          command: |
            mkdir -p /tmp/test-results
            go tool cover -func=coverage.out
            go tool cover -html=coverage.out -o coverage.html
            cat coverage.out > /tmp/test-results/coverage.txt
            mv coverage.out /tmp/test-results/coverage.out
            mv coverage.html /tmp/test-results/coverage.html
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
      - codecov/upload:
          file: /tmp/test-results/coverage.txt

#  build:
#    machine: true
#    steps:
#      - checkout
#      - run:
#          name: Build
#          command: |
#            docker build -t bockyanggoh/auto-porter-go:latest .
#            docker tag bockyanggoh/auto-porter-go:latest bockyanggoh/auto-porter-go:1.0.${CIRCLE_WORKFLOW_ID}

workflows:
  version: 2
  build:
    jobs:
      - test
#      - build:
#          requires:
#            - test
#          context: dockerhub